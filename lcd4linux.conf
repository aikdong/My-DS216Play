Display SamsungSPF {
        Driver     'SamsungSPF'
        Model       'spf-75h'
        Font       '8x11'
        Foreground 'ffbf00'
        Background 'ffffff00'
        Basecolor  '000000'   #ffffff00
        Orientation 0          # Orientation value from 0-3
        Backlight 21           # Backlight variable control
}
# 背景图片
Widget myImage {
    class 'Image'
    file ImgDir . 'back.fw.png'
    update day 	# 刷新速度（毫秒），默认为1分钟，0表示静态文本
    reload 1
    visible 1
    inverted 0
}

# DSM主版本号
Widget DSMMainVersion {
        class  'Image'
        file dImgDir . substr(file::readline('/etc.defaults/VERSION', 1), 14, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
# DSM副版本号
Widget DSMMinorVersion {
        class  'Image'
        file dImgDir . substr(file::readline('/etc.defaults/VERSION', 2), 14, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
# DSM编译版本号
Widget DSMBuildVersion1 {
        class  'Image'
        file dImgDir . substr(BuildVersion, 13, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
Widget DSMBuildVersion2 {
        class  'Image'
        file dImgDir . substr(BuildVersion, 14, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
Widget DSMBuildVersion3 {
        class  'Image'
        file dImgDir . substr(BuildVersion, 15, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
Widget DSMBuildVersion4 {
        class  'Image'
        file dImgDir . substr(BuildVersion, 16, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
# DSM安全更新版本号
Widget DSMUpdateVersion {
        class  'Image'
        file dImgDir . substr(file::readline('/etc.defaults/VERSION', 5), 15, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
# Linux核心主版本号
Widget LinuxMainVersion {
        class  'Image'
        file dImgDir . substr(uname('release'), 0, 1) . '.fw.png' 	# 3.2.40
        update day
	reload 1
	visible 1
        inverted 0
}
# Linux核心副版本号
Widget LinuxMinorVersion {
        class  'Image'
        file dImgDir . substr(uname('release'), 2, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
# Linux核心编译版本号
Widget LinuxBuildVersion1 {
        class  'Image'
        file dImgDir . substr(LinuxBuild, 4, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
Widget LinuxBuildVersion2 {
        class  'Image'
        file dImgDir . substr(LinuxBuild, 5, 1) . '.fw.png' 	# 5.0.4528
        update day
	reload 1
	visible 1
        inverted 0
}
# 主机名
Widget Machine {
        class  'Image'
        file dImgDir .uname('machine') . '.fw.png' 	# x86_64
        update day
	reload 1
	visible 1
        inverted 0
}
# CPU核心数
Widget CPUCores {
        class  'Image'
        file dImgDir .cpuinfo('cpu cores') . '.fw.png' 	# 2
        update day	# 刷新速度（毫秒），默认??分钟，0表示静态文本
	reload 1
	visible 1
        inverted 0
}
# 内存大小
Widget RamTotal1 {
        class  'Image'
        file dImgDir . substr(RamT, 0, 1) . '.fw.png' 	# 2
        update day
	reload 1
	visible 1
        inverted 0
}
Widget RamTotal2 {
        class  'Image'
        file dImgDir . substr(RamT, 1, 1) . '.fw.png' 	# 2
        update day
	reload 1
	visible 1
        inverted 0
}
Widget RamTotal3 {
        class  'Image'
        file dImgDir . substr(RamT, 2, 1) . '.fw.png' 	# 2
        update day
	reload 1
	visible 1
        inverted 0
}
Widget RamUnit {
        class  'Image'
        file meminfo('MemTotal')<1048576?(dImgDir . 'M.fw.png'):(dImgDir . 'G.fw.png') 	# 2
        update day
	reload 1
	visible 1
        inverted 0
}
# 运行时间（天）
Widget UpDay1 {
	class  'Image'
	file dImgDir . substr(UpD, 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget UpDay2 {
	class  'Image'
	file dImgDir . substr(UpD, 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget UpDay3 {
	class  'Image'
	file dImgDir . substr(UpD, 2, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
# 运行时间（小时）
Widget UpHour1 {
	class  'Image'
	file dImgDir . substr(uptime('%H'), 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget UpHour2 {
	class  'Image'
	file dImgDir . substr(uptime('%H'), 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
# 运行时间（分钟）
Widget UpMinite1 {
	class  'Image'
	file dImgDir . substr(uptime('%M'), 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget UpMinite2 {
	class  'Image'
	file dImgDir . substr(uptime('%M'), 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
# 运行时间（秒）
Widget UpSecond1 {
	class  'Image'
	file dImgDir . substr(uptime('%S'), 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget UpSecond2 {
	class  'Image'
	file dImgDir . substr(uptime('%S'), 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
# IP地址
widget IPAddress1 {
	class  'Image'
	file dImgDir . substr(IP, 0, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress2 {
	class  'Image'
	file dImgDir . substr(IP, 1, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress3 {
	class  'Image'
	file dImgDir . substr(IP, 2, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress4 {
	class  'Image'
	file dImgDir . substr(IP, 3, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress5 {
	class  'Image'
	file dImgDir . substr(IP, 4, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress6 {
	class  'Image'
	file dImgDir . substr(IP, 5, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress7 {
	class  'Image'
	file dImgDir . substr(IP, 6, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress8 {
	class  'Image'
	file dImgDir . substr(IP, 7, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddress9 {
	class  'Image'
	file dImgDir . substr(IP, 8, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddressA {
	class  'Image'
	file dImgDir . substr(IP, 9, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddressB {
	class  'Image'
	file dImgDir . substr(IP, 10, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddressC {
	class  'Image'
	file dImgDir . substr(IP, 11, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddressD {
	class  'Image'
	file dImgDir . substr(IP, 12, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddressE {
	class  'Image'
	file dImgDir . substr(IP, 13, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
widget IPAddressF {
	class  'Image'
	file dImgDir . substr(IP, 14, 1) . '.fw.png'
	update minite
	reload 1
	visible 1
        inverted 0
}
# CPU占用率
widget CPUBar {
	class  'Image'
	file pImgDir . ceil(CPU/2.5) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUText1 {
	class  'Image'
	file dImgDir . substr(ceil(CPU), 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUText2 {
	class  'Image'
	file dImgDir . substr(ceil(CPU), 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUText3 {
	class  'Image'
	file dImgDir . substr(ceil(CPU), 2, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}

i2c_sensors-path '/sys/devices/'
widget Core0Temp1 {
	class  'Image'
	file dImgDir . substr(ceil(i2c_sensors('platform/coretemp.0/temp2_input')), 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget Core0Temp2 {
	class  'Image'
	file dImgDir . substr(ceil(i2c_sensors('platform/coretemp.0/temp2_input')), 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget Core1Temp1 {
	class  'Image'
	file dImgDir . substr(ceil(i2c_sensors('platform/coretemp.0/temp3_input')), 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget Core1Temp2 {
	class  'Image'
	file dImgDir . substr(ceil(i2c_sensors('platform/coretemp.0/temp3_input')), 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}


widget CPUFan1 {
	class  'Image'
	file dImgDir . substr(CFan, 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUFan2 {
	class  'Image'
	file dImgDir . substr(CFan, 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUFan3 {
	class  'Image'
	file dImgDir . substr(CFan, 2, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUFan4 {
	class  'Image'
	file dImgDir . substr(CFan, 3, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUFreq1 {
	class  'Image'
	file dImgDir . substr(CFreq, 0, 1) . '.bb.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUFreq2 {
	class  'Image'
	file dImgDir . substr(CFreq, 1, 1) . '.bb.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUFreq3 {
	class  'Image'
	file dImgDir . substr(CFreq, 2, 1) . '.bb.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget CPUFreq4 {
	class  'Image'
	file dImgDir . substr(CFreq, 3, 1) . '.bb.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}

widget RAMBar {
	class  'Image'
	file pImgDir . ceil(RLoad/2.5*100) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget RAMText1 {
	class  'Image'
	file dImgDir . substr(RLoad*100, 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget RAMText2 {
	class  'Image'
	file dImgDir . substr(RLoad*100, 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget RAMText3 {
	class  'Image'
	file dImgDir . substr(RLoad*100, 2, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget RamFree1 {
        class  'Image'
        file dImgDir .substr(RFree, 0, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamFree2 {
        class  'Image'
        file dImgDir .substr(RFree, 1, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamFree3 {
        class  'Image'
        file dImgDir .substr(RFree, 2, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamFreeUnit {
        class  'Image'
        file meminfo('MemFree')<1048576?(dImgDir . 'M.fw.png'):(dImgDir . 'G.fw.png') 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamBuffer1 {
        class  'Image'
        file dImgDir .substr(RBuffer, 0, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamBuffer2 {
        class  'Image'
        file dImgDir .substr(RBuffer, 1, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamBuffer3 {
        class  'Image'
        file dImgDir .substr(RBuffer, 2, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamBufferUnit {
        class  'Image'
        file meminfo('Buffers')<1048576?(dImgDir . 'M.fw.png'):(dImgDir . 'G.fw.png') 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamCache1 {
        class  'Image'
        file dImgDir .substr(RCache, 0, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamCache2 {
        class  'Image'
        file dImgDir .substr(RCache, 1, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamCache3 {
        class  'Image'
        file dImgDir .substr(RCache, 2, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget RamCacheUnit {
        class  'Image'
        file meminfo('Cached')<1048576?(dImgDir . 'M.fw.png'):(dImgDir . 'G.fw.png') 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

widget SwapBar {
	class  'Image'
	file pImgDir . ceil(SLoad/2.5*100) . '.fw.png'
	update second
	reload 1
	visible 1
    inverted 0
}
widget SwapText1 {
	class  'Image'
	file dImgDir . substr(SLoad*100, 0, 1) . '.fw.png'
	update second
	reload 1
	visible 1
    inverted 0
}
widget SwapText2 {
	class  'Image'
	file dImgDir . substr(SLoad*100, 1, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
widget SwapText3 {
	class  'Image'
	file dImgDir . substr(SLoad*100, 2, 1) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}

Widget SwapTotal1 {
        class  'Image'
        file dImgDir .substr(SwapT, 0, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapTotal2 {
        class  'Image'
        file dImgDir .substr(SwapT, 1, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapTotal3 {
        class  'Image'
        file dImgDir .substr(SwapT, 2, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapTotalUnit {
        class  'Image'
        file meminfo('SwapTotal')<1048576?(dImgDir . 'M.fw.png'):(dImgDir . 'G.fw.png') 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapFree1 {
        class  'Image'
        file dImgDir .substr(SwapF, 0, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapFree2 {
        class  'Image'
        file dImgDir .substr(SwapF, 1, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapFree3 {
        class  'Image'
        file dImgDir .substr(SwapF, 2, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapFreeUnit {
        class  'Image'
        file meminfo('SwapFree')<1048576?(dImgDir . 'M.fw.png'):(dImgDir . 'G.fw.png') 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapCached1 {
        class  'Image'
        file dImgDir .substr(SwapC, 0, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapCached2 {
        class  'Image'
        file dImgDir .substr(SwapC, 1, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapCached3 {
        class  'Image'
        file dImgDir .substr(SwapC, 2, 1) . '.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget SwapCachedUnit {
        class  'Image'
        file meminfo('SwapCached')<1048576?(dImgDir . 'M.fw.png'):(dImgDir . 'G.fw.png') 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

widget Space1Bar {
	class  'Image'
	file pImgDir . ceil((statfs(SpaceDir1, 'blocks') - statfs(SpaceDir1, 'bavail'))/statfs(SpaceDir1, 'blocks')/2.5*100) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Total1 {
        class  'Image'
        file dImgDir . substr(Space1T,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Total2 {
        class  'Image'
        file dImgDir . substr(Space1T,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Total3 {
        class  'Image'
        file dImgDir . substr(Space1T,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Total4 {
        class  'Image'
        file dImgDir . substr(Space1T,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Total5 {
        class  'Image'
        file dImgDir . substr(Space1T,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Total6 {
        class  'Image'
        file dImgDir . substr(Space1T,5,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1TotalUnit {
        class  'Image'
        file dImgDir . (statfs(SpaceDir1, 'blocks')*statfs(SpaceDir1, 'bsize')/1073741824<1?'M':'G').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

Widget Space1Free1 {
        class  'Image'
        file dImgDir . substr(Space1F,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Free2 {
        class  'Image'
        file dImgDir . substr(Space1F,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Free3 {
        class  'Image'
        file dImgDir . substr(Space1F,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Free4 {
        class  'Image'
        file dImgDir . substr(Space1F,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Free5 {
        class  'Image'
        file dImgDir . substr(Space1F,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1Free6 {
        class  'Image'
        file dImgDir . substr(Space1F,5,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space1FreeUnit {
        class  'Image'
        file dImgDir . (statfs(SpaceDir1, 'bavail')*statfs(SpaceDir1, 'bsize')/1073741824<1?'M':'G').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

Widget Disk1Write1 {
        class  'Image'
        file dImgDir . substr(Disk1W,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Write2 {
        class  'Image'
        file dImgDir . substr(Disk1W,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Write3 {
        class  'Image'
        file dImgDir . substr(Disk1W,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Write4 {
        class  'Image'
        file dImgDir . substr(Disk1W,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Write5 {
        class  'Image'
        file dImgDir . substr(Disk1W,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1WriteUnit {
        class  'Image'
        file dImgDir . (diskstats(DiskName1, 'write_sectors', 500)/2<1024?'Ks':'Ms').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Read1 {
        class  'Image'
        file dImgDir . substr(Disk1R,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Read2 {
        class  'Image'
        file dImgDir . substr(Disk1R,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Read3 {
        class  'Image'
        file dImgDir . substr(Disk1R,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Read4 {
        class  'Image'
        file dImgDir . substr(Disk1R,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Read5 {
        class  'Image'
        file dImgDir . substr(Disk1R,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk1ReadUnit {
        class  'Image'
        file dImgDir . (diskstats(DiskName1, 'read_sectors', 500)/2<1024?'Ks':'Ms').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

Widget DiskBar1 {
        class 'Bar'
        expression  diskstats(DiskName1, 'read_sectors',  500)
        expression2 diskstats(DiskName1, 'write_sectors', 500)
        length 32
        direction 'E'
#      style 'H'
        update second
        Foreground '5f5f5f'
        Background '111111FF'
        BarColor0 '00b200'
        BarColor1 'FFBF00'
}
Widget Disk1TempBar {
         class  'Image'
        file tImgDir . (smart('/dev/'.DiskName1)).'.fw.png' 	# 2
        update second*5
	reload 1
	visible 1
        inverted 0
}

Widget DiskBar2 {
        class 'Bar'
        expression  diskstats(DiskName2, 'read_sectors',  500)
        expression2 diskstats(DiskName2, 'write_sectors', 500)
        length 32
        direction 'E'
#      style 'H'
        update second
        Foreground '5f5f5f'
        Background '111111FF'
        BarColor0 '00b200'
        BarColor1 'FFBF00'
}

widget Space2Bar {
	class  'Image'
	file pImgDir . ceil((statfs(SpaceDir2, 'blocks') - statfs(SpaceDir2, 'bavail'))/statfs(SpaceDir2, 'blocks')/2.5*100) . '.fw.png'
	update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Total1 {
        class  'Image'
        file dImgDir . substr(Space2T,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Total2 {
        class  'Image'
        file dImgDir . substr(Space2T,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Total3 {
        class  'Image'
        file dImgDir . substr(Space2T,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Total4 {
        class  'Image'
        file dImgDir . substr(Space2T,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Total5 {
        class  'Image'
        file dImgDir . substr(Space2T,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Total6 {
        class  'Image'
        file dImgDir . substr(Space2T,5,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2TotalUnit {
        class  'Image'
        file dImgDir . (statfs(SpaceDir2, 'blocks')*statfs(SpaceDir2, 'bsize')/1073741824<1?'M':'G').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

Widget Space2Free1 {
        class  'Image'
        file dImgDir . substr(Space2F,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Free2 {
        class  'Image'
        file dImgDir . substr(Space2F,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Free3 {
        class  'Image'
        file dImgDir . substr(Space2F,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Free4 {
        class  'Image'
        file dImgDir . substr(Space2F,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Free5 {
        class  'Image'
        file dImgDir . substr(Space2F,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2Free6 {
        class  'Image'
        file dImgDir . substr(Space2F,5,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Space2FreeUnit {
        class  'Image'
        file dImgDir . (statfs(SpaceDir2, 'bavail')*statfs(SpaceDir2, 'bsize')/1073741824<1?'M':'G').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

Widget Space2UsedUnit {
        class  'Image'
        file dImgDir . ((statfs(SpaceDir2, 'blocks')-statfs(SpaceDir2, 'bavail'))*statfs(SpaceDir2, 'bsize')/1073741824<1?'M':'G').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

Widget Disk2Write1 {
        class  'Image'
        file dImgDir . substr(Disk2W,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Write2 {
        class  'Image'
        file dImgDir . substr(Disk2W,1,1).'.fw.png' 	# 2
        update second	# 刷新速度（毫秒），默认为1分钟，0表示静态文??
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Write3 {
        class  'Image'
        file dImgDir . substr(Disk2W,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Write4 {
        class  'Image'
        file dImgDir . substr(Disk2W,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Write5 {
        class  'Image'
        file dImgDir . substr(Disk2W,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2WriteUnit {
        class  'Image'
        file dImgDir . (diskstats(DiskName2, 'write_sectors', 500)/2<1024?'Ks':'Ms').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Read1 {
        class  'Image'
        file dImgDir . substr(Disk2R,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Read2 {
        class  'Image'
        file dImgDir . substr(Disk2R,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Read3 {
        class  'Image'
        file dImgDir . substr(Disk2R,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Read4 {
        class  'Image'
        file dImgDir . substr(Disk2R,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Read5 {
        class  'Image'
        file dImgDir . substr(Disk2R,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2ReadUnit {
        class  'Image'
        file dImgDir . (diskstats(DiskName2, 'read_sectors', 500)/2<1024?'Ks':'Ms').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Disk2TempBar {
         class  'Image'
        file tImgDir . (smart('/dev/'.DiskName2)).'.fw.png' 	# 2
        update second*5
	reload 1
	visible 1
        inverted 0
}

Widget Net1Up1 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Tx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Tx_bytes', 500)/1024:netdev::fast(NetDevice, 'Tx_bytes', 500)/1048576,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Up2 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Tx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Tx_bytes', 500)/1024:netdev::fast(NetDevice, 'Tx_bytes', 500)/1048576,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Up3 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Tx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Tx_bytes', 500)/1024:netdev::fast(NetDevice, 'Tx_bytes', 500)/1048576,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Up4 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Tx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Tx_bytes', 500)/1024:netdev::fast(NetDevice, 'Tx_bytes', 500)/1048576,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Up5 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Tx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Tx_bytes', 500)/1024:netdev::fast(NetDevice, 'Tx_bytes', 500)/1048576,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1UpUnit {
        class  'Image'
        file dImgDir . (netdev::fast(NetDevice, 'Tx_bytes', 500)/1024<1024?'Ks':'Ms').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}

Widget Net1Dn1 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Rx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Rx_bytes', 500)/1024:netdev::fast(NetDevice, 'Rx_bytes', 500)/1048576,0,1).'.fw.png'
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Dn2 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Rx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Rx_bytes', 500)/1024:netdev::fast(NetDevice, 'Rx_bytes', 500)/1048576,1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Dn3 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Rx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Rx_bytes', 500)/1024:netdev::fast(NetDevice, 'Rx_bytes', 500)/1048576,2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Dn4 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Rx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Rx_bytes', 500)/1024:netdev::fast(NetDevice, 'Rx_bytes', 500)/1048576,3,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Dn5 {
        class  'Image'
        file dImgDir . substr(netdev::fast(NetDevice, 'Rx_bytes', 500)/1024<1024?netdev::fast(NetDevice, 'Rx_bytes', 500)/1024:netdev::fast(NetDevice, 'Rx_bytes', 500)/1048576,4,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1DnUnit {
        class  'Image'
        file dImgDir . (netdev::fast(NetDevice, 'Rx_bytes', 500)/1024<1024?'Ks':'Ms').'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Speed1 {
        class  'Image'
        file dImgDir . substr((file::readline('/sys/class/net/'.NetDevice.'/speed',1)>=1000?(file::readline('/sys/class/net/'.NetDevice.'/speed',1)/1000+0.00001):(file::readline('/sys/class/net/'.NetDevice.'/speed',1))),0,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Speed2 {
        class  'Image'
        file dImgDir . substr((file::readline('/sys/class/net/'.NetDevice.'/speed',1)>=1000?(file::readline('/sys/class/net/'.NetDevice.'/speed',1)/1000+0.00001):(file::readline('/sys/class/net/'.NetDevice.'/speed',1))),1,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1Speed3 {
        class  'Image'
        file dImgDir . substr((file::readline('/sys/class/net/'.NetDevice.'/speed',1)>=1000?(file::readline('/sys/class/net/'.NetDevice.'/speed',1)/1000+0.00001):(file::readline('/sys/class/net/'.NetDevice.'/speed',1))),2,1).'.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget Net1SpeedUnit {
        class  'Image'
        file dImgDir . (file::readline('/sys/class/net/'.NetDevice.'/speed',1)>=1000?'G':'M').'bps.fw.png' 	# 2
        update second
	reload 1
	visible 1
        inverted 0
}
Widget NetBar {
        class 'Bar'
        expression netdev(NetDevice, 'Tx_bytes', 500)
        expression2  netdev(NetDevice, 'Rx_bytes', 500)
        length 30
        direction 'E'
        update second
        Foreground '5f5f5f'
        Background '111111FF'
        BarColor0 '00b200'
        BarColor1 'FFBF00'
}

Widget Disk1Power1 {
	class 'Image'
	file dImgDir . (substr(Power1, 0, 1)).'.fw.png' 	# 2
        	update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Power2 {
	class 'Image'
	file dImgDir . (substr(Power1, 1, 1)).'.fw.png' 	# 2
        	update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Power3 {
	class 'Image'
	file dImgDir . (substr(Power1, 2, 1)).'.fw.png' 	# 2
        update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Power4 {
	class 'Image'
	file dImgDir . (substr(Power1, 3, 1)).'.fw.png' 	# 2
        update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk1Power5 {
	class 'Image'
	file dImgDir . (substr(Power1, 4, 1)).'.fw.png' 	# 2
        update hour
	reload 1
	visible 1
        inverted 0
}

Widget Disk1PowerOn {
	class 'Timer'
	expression Power1=smart('/dev/'.DiskName1,'ata','Power_On_Hours')
	active 1
	update hour
}
Widget Disk2Power1 {
	class 'Image'
	file dImgDir . (substr(Power2, 0, 1)).'.fw.png' 	# 2
        	update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Power2 {
	class 'Image'
	file dImgDir . (substr(Power2, 1, 1)).'.fw.png' 	# 2
        	update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Power3 {
	class 'Image'
	file dImgDir . (substr(Power2, 2, 1)).'.fw.png' 	# 2
        update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Power4 {
	class 'Image'
	file dImgDir . (substr(Power2, 3, 1)).'.fw.png' 	# 2
        update hour
	reload 1
	visible 1
        inverted 0
}
Widget Disk2Power5 {
	class 'Image'
	file dImgDir . (substr(Power2, 4, 1)).'.fw.png' 	# 2
        update hour
	reload 1
	visible 1
        inverted 0
}

Widget Disk2PowerOn {
	class 'Timer'
	expression Power2=smart('/dev/'.DiskName2,'ata','Power_On_Hours')
	active 1
	update hour
}

Widget IPAddress {
	class 'Timer'
	expression IP=netinfo::ipaddr(NetDevice)
	active 1
	update minite
}

Widget DSMBuildVersion {
	class 'Timer'
	expression BuildVersion=file::readline('/etc.defaults/VERSION', 4)
	active 1
	update day
}

Widget LBuild {
	class 'Timer'
	expression LinuxBuild=uname('release')
	active 1
	update day
}
Widget RamTotal {
	class 'Timer'
	expression RamT=meminfo('MemTotal')<1048576?(meminfo('MemTotal')/1024):(meminfo('MemTotal')/1048576)
	active 1
	update day
}
Widget UpDay {
	class 'Timer'
	expression UpD=uptime('%d')
	active 1
	update second
}
Widget CPULoad {
	class 'Timer'
	expression CPU=proc_stat::cpu('busy', 500)
	active 1
	update second
}
Widget CPUFan {
	class 'Timer'
	expression CFan=i2c_sensors('platform/it87.2576/fan1_input')
	active 1
	update second
}
Widget CPUFreq {
	class 'Timer'
	expression CFreq=i2c_sensors('system/cpu/cpu0/cpufreq/cpuinfo_cur_freq')
	active 1
	update second
}
Widget RamLoad {
	class 'Timer'
	expression RLoad=(meminfo('MemTotal') - meminfo('MemFree'))/meminfo('MemTotal')
	active 1
	update second
}
Widget RamFree {
	class 'Timer'
	expression RFree=meminfo('MemFree')<1048576?(meminfo('MemFree')/1024):(meminfo('MemFree')/1048576)
	active 1
	update second
}
Widget RamBuffer {
	class 'Timer'
	expression RBuffer=meminfo('Buffers')<1048576?(meminfo('Buffers')/1024):(meminfo('Buffers')/1048576)
	active 1
	update second
}
Widget RamCache {
	class 'Timer'
	expression RCache=meminfo('Cached')<1048576?(meminfo('Cached')/1024):(meminfo('Cached')/1048576)
	active 1
	update second
}
Widget SwapLoad {
	class 'Timer'
	expression SLoad=(meminfo('SwapTotal') - meminfo('SwapFree'))/meminfo('SwapTotal')
	active 1
	update second
}
Widget SwapTotal {
	class 'Timer'
	expression SwapT=meminfo('SwapTotal')<1048576?(meminfo('SwapTotal')/1024):(meminfo('SwapTotal')/1048576)
	active 1
	update second
}
Widget SwapFree {
	class 'Timer'
	expression SwapF=meminfo('SwapFree')<1048576?(meminfo('SwapFree')/1024):(meminfo('SwapFree')/1048576)
	active 1
	update second
}
Widget SwapCache {
	class 'Timer'
	expression SwapC=meminfo('SwapCached')<1048576?(meminfo('SwapCached')/1024):(meminfo('SwapCached')/1048576)
	active 1
	update second
}
Widget Space1Total {
	class 'Timer'
	expression Space1T=statfs(SpaceDir1, 'blocks')*statfs(SpaceDir1, 'bsize')/1073741824<1?(statfs(SpaceDir1, 'blocks')*statfs(SpaceDir1, 'bsize')/1048576):(statfs(SpaceDir1, 'blocks')*statfs(SpaceDir1, 'bsize')/1073741824)
	active 1
	update second
}
Widget Space1Free {
	class 'Timer'
	expression Space1F=statfs(SpaceDir1, 'bavail')*statfs(SpaceDir1, 'bsize')/1073741824<1?(statfs(SpaceDir1, 'bavail')*statfs(SpaceDir1, 'bsize')/1048576):(statfs(SpaceDir1, 'bavail')*statfs(SpaceDir1, 'bsize')/1073741824)
	active 1
	update second
}
Widget Disk1Write {
	class 'Timer'
	expression Disk1W=diskstats(DiskName1, 'write_sectors', 500)/2<1024?(diskstats(DiskName1, 'write_sectors', 500)/2):(diskstats(DiskName1, 'write_sectors', 500)/2048)
	active 1
	update second
}
Widget Disk1Read {
	class 'Timer'
	expression Disk1R=diskstats(DiskName1, 'read_sectors', 500)/2<1024?(diskstats(DiskName1, 'read_sectors', 500)/2):(diskstats(DiskName1, 'read_sectors', 500)/2048)
	active 1
	update second
}
Widget Space2Total {
	class 'Timer'
	expression Space2T=statfs(SpaceDir2, 'blocks')*statfs(SpaceDir2, 'bsize')/1073741824<1?(statfs(SpaceDir2, 'blocks')*statfs(SpaceDir2, 'bsize')/1048576):(statfs(SpaceDir2, 'blocks')*statfs(SpaceDir2, 'bsize')/1073741824)
	active 1
	update second
}
Widget Space2Free {
	class 'Timer'
	expression Space2F=statfs(SpaceDir2, 'bavail')*statfs(SpaceDir2, 'bsize')/1073741824<1?(statfs(SpaceDir2, 'bavail')*statfs(SpaceDir2, 'bsize')/1048576):(statfs(SpaceDir2, 'bavail')*statfs(SpaceDir2, 'bsize')/1073741824)
	active 1
	update second
}
Widget Disk2Write {
	class 'Timer'
	expression Disk2W=diskstats(DiskName2, 'write_sectors', 500)/2<1024?(diskstats(DiskName2, 'write_sectors', 500)/2):(diskstats(DiskName2, 'write_sectors', 500)/2048)
	active 1
	update second
}
Widget Disk2Read {
	class 'Timer'
	expression Disk2R=diskstats(DiskName2, 'read_sectors', 500)/2<1024?(diskstats(DiskName2, 'read_sectors', 500)/2):(diskstats(DiskName2, 'read_sectors', 500)/2048)
	active 1
	update second
}
Widget Net1Up {
	class 'Timer'
	expression Net1U=netdev::fast(NetDevice, 'Tx_bytes', 500)/1024<1024?(netdev::fast(NetDevice, 'Tx_bytes', 500)/1024):(netdev::fast(NetDevice, 'Tx_bytes', 500)/1048576)
	active 1
	update second
}
Widget Net1Dn {
	class 'Timer'
	expression Net1D=netdev::fast(NetDevice, 'Rx_bytes', 500)/1024<1024?(netdev::fast(NetDevice, 'Rx_bytes', 500)/1024):(netdev::fast(NetDevice, 'Rx_bytes', 500)/1048576)
	active 1
	update second
}


Widget CPUName2 {
        class  'Text'
        expression uname('release')        
	prefix 'CPU: '
        postfix ''
        width  50	# widget长度（包含前、后缀）
        align  'L'	# L（左对齐）、C（居中）、R（右对齐）、M（滚动）、A（自动滚动）、PL（弹跳滚动，短字符串左对齐）、PC（弹跳滚动，短字符串居中）、PR（弹跳滚动，短字符串右对齐）
        style ''	# bold - 粗体，其余均为正常（仅对图形显示器有效）
        speed 0	# 滚动速度（毫秒），默认为500ms
        update 10	# 刷新速度（毫秒），默认为1分钟，0表示静态文??
        Background 'FFFFFF00'
}

Display 'SamsungSPF'

Layout mylayout {
# 系统总览
        #Row03.Col11 'DSMVersion'
        #Row05.Col01 'Kernel'
        #Row07.Col01 'Hardware'
        #Row04.Col01 'OSVersion'
        #Row09.Col01 'HostName'
# CPU信息
        Row40.Col01 'CPUName2'
        #Row13.Col01 'CPUCore'
        #Row15.Col01 'CPUType'
        #Row17.Col01 'CPUBusy'
	Row13.Col32 'DiskBar1'
	Row13.Col69 'NetBar'
	Row26.Col33 'DiskBar2'
	Layer 2 {
			X1.Y1 'myImage'
		}
	Layer 0 {
			X-1.Y723 'Net1Speed1'
			X-1.Y731 'Net1Speed2'
			X-1.Y739 'Net1Speed3'
			X-1.Y747 'Net1SpeedUnit'

			X-1.Y435 'Disk1Power1'
			X-1.Y443 'Disk1Power2'
			X-1.Y451 'Disk1Power3'
			X-1.Y459 'Disk1Power4'
			X-1.Y467 'Disk1Power5'
			X146.Y435 'Disk2Power1'
			X146.Y443 'Disk2Power2'
			X146.Y451 'Disk2Power3'
			X146.Y459 'Disk2Power4'
			X146.Y467 'Disk2Power5'

			X14.Y244 'Disk1TempBar'
			X162.Y244 'Disk2TempBar'

			X18.Y78 'DSMMainVersion'
			X18.Y86 'DOT'
			X18.Y94 'DSMMinorVersion'
			X18.Y102 'DOT'
			X18.Y110 'DSMBuildVersion1'
			X18.Y118 'DSMBuildVersion2'
			X18.Y126 'DSMBuildVersion3'
			X18.Y134 'DSMBuildVersion4'
			X18.Y168 'DSMUpdateVersion'
			
			X36.Y108 'LinuxMainVersion'
			X36.Y116 'DOT'
			X36.Y124 'LinuxMinorVersion'
			X36.Y132 'DOT'
			X36.Y140 'LinuxBuildVersion1'
			X36.Y148 'LinuxBuildVersion2'

			X54.Y74 'Machine'

			X90.Y61 'IPAddress1'
			X90.Y69 'IPAddress2'
			X90.Y77 'IPAddress3'
			X90.Y85 'IPAddress4'
			X90.Y93 'IPAddress5'
			X90.Y101 'IPAddress6'
			X90.Y109 'IPAddress7'
			X90.Y117 'IPAddress8'
			X90.Y125 'IPAddress9'
			X90.Y133 'IPAddressA'
			X90.Y141 'IPAddressB'
			X90.Y149 'IPAddressC'
			X90.Y157 'IPAddressD'
			X90.Y165 'IPAddressE'
			X90.Y173 'IPAddressF'

			X126.Y62 'CPUCores'
			
			X144.Y50 'RamTotal1'
			X144.Y58 'RamTotal2'
			X144.Y66 'RamTotal3'
			X144.Y74 'RamUnit'

			X162.Y74 'UpDay1'
			X162.Y82 'UpDay2'
			X162.Y90 'UpDay3'
			X162.Y112 'UpHour1'
			X162.Y120 'UpHour2'
			X162.Y158 'UpMinite1'
			X162.Y166 'UpMinite2'
			#X162.Y170 'UpSecond1'
			#X162.Y178 'UpSecond2'
			
			X208.Y11 'CPUBar'
			X187.Y151 'CPUFreq1'
			X187.Y162 'CPUFreq2'
			X187.Y173 'CPUFreq3'
			X187.Y184 'CPUFreq4'
			X209.Y162 'Core0Temp1'
			X209.Y170 'Core0Temp2'
			X227.Y162 'Core1Temp1'
			X227.Y170 'Core1Temp2'
			X245.Y166 'CPUFan1'
			X245.Y174 'CPUFan2'
			X245.Y182 'CPUFan3'
			X245.Y190 'CPUFan4'

			X225.Y27 'CPUText1'
			X225.Y35 'CPUText2'
			X225.Y43 'CPUText3'

			X291.Y11 'RAMBar'
			X308.Y27 'RAMText1'
			X308.Y35 'RAMText2'
			X308.Y43 'RAMText3'

			X293.Y147 'RamFree1'
			X293.Y155 'RamFree2'
			X293.Y163 'RamFree3'
			X293.Y171 'RamFreeUnit'

			X311.Y147 'RamBuffer1'
			X311.Y155 'RamBuffer2'
			X311.Y163 'RamBuffer3'
			X311.Y171 'RamBufferUnit'

			X329.Y147 'RamCache1'
			X329.Y155 'RamCache2'
			X329.Y163 'RamCache3'
			X329.Y171 'RamCacheUnit'

			X374.Y11 'SwapBar'
			X391.Y27 'SwapText1'
			X391.Y35 'SwapText2'
			X391.Y43 'SwapText3'

			X376.Y147 'SwapTotal1'
			X376.Y155 'SwapTotal2'
			X376.Y163 'SwapTotal3'
			X376.Y171 'SwapTotalUnit'

			X394.Y147 'SwapFree1'
			X394.Y155 'SwapFree2'
			X394.Y163 'SwapFree3'
			X394.Y171 'SwapFreeUnit'

			X412.Y147 'SwapCached1'
			X412.Y155 'SwapCached2'
			X412.Y163 'SwapCached3'
			X412.Y171 'SwapCachedUnit'

			X35.Y440 'Space1Bar'
			X90.Y283 'Space1Total1'
			X90.Y291 'Space1Total2'
			X90.Y299 'Space1Total3'
			X90.Y307 'Space1Total4'
			X90.Y315 'Space1Total5'
			X90.Y323 'Space1Total6'
			X90.Y331 'Space1TotalUnit'
			X90.Y454 'Space1Free1'
			X90.Y462 'Space1Free2'
			X90.Y470 'Space1Free3'
			X90.Y478 'Space1Free4'
			X90.Y486 'Space1Free5'
			X90.Y494 'Space1Free6'
			X90.Y502 'Space1FreeUnit'
			
			X108.Y283 'Disk1Read1'
			X108.Y291 'Disk1Read2'
			X108.Y299 'Disk1Read3'
			X108.Y307 'Disk1Read4'
			X108.Y315 'Disk1Read5'
			X108.Y323 'Disk1ReadUnit'

			X108.Y454 'Disk1Write1'
			X108.Y462 'Disk1Write2'
			X108.Y470 'Disk1Write3'
			X108.Y478 'Disk1Write4'
			X108.Y486 'Disk1Write5'
			X108.Y494 'Disk1WriteUnit'

			X182.Y440 'Space2Bar'
			X237.Y283 'Space2Total1'
			X237.Y291 'Space2Total2'
			X237.Y299 'Space2Total3'
			X237.Y307 'Space2Total4'
			X237.Y315 'Space2Total5'
			X237.Y323 'Space2Total6'
			X237.Y331 'Space2TotalUnit'
			X237.Y454 'Space2Free1'
			X237.Y462 'Space2Free2'
			X237.Y470 'Space2Free3'
			X237.Y478 'Space2Free4'
			X237.Y486 'Space2Free5'
			X237.Y494 'Space2Free6'
			X237.Y502 'Space2FreeUnit'
			
			X255.Y283 'Disk2Read1'
			X255.Y291 'Disk2Read2'
			X255.Y299 'Disk2Read3'
			X255.Y307 'Disk2Read4'
			X255.Y315 'Disk2Read5'
			X255.Y323 'Disk2ReadUnit'

			X255.Y454 'Disk2Write1'
			X255.Y462 'Disk2Write2'
			X255.Y470 'Disk2Write3'
			X255.Y478 'Disk2Write4'
			X255.Y486 'Disk2Write5'
			X255.Y494 'Disk2WriteUnit'

			X90.Y591 'IPAddress1'
			X90.Y600 'IPAddress2'
			X90.Y608 'IPAddress3'
			X90.Y616 'IPAddress4'
			X90.Y624 'IPAddress5'
			X90.Y632 'IPAddress6'
			X90.Y640 'IPAddress7'
			X90.Y648 'IPAddress8'
			X90.Y656 'IPAddress9'
			X90.Y664 'IPAddressA'
			X90.Y672 'IPAddressB'
			X90.Y680 'IPAddressC'
			X90.Y688 'IPAddressD'
			X90.Y696 'IPAddressE'
			X90.Y704 'IPAddressF'

			X108.Y580 'Net1Up1'
			X108.Y588 'Net1Up2'
			X108.Y596 'Net1Up3'
			X108.Y604 'Net1Up4'
			X108.Y612 'Net1Up5'
			X108.Y620 'Net1UpUnit'
			X108.Y723 'Net1Dn1'
			X108.Y731 'Net1Dn2'
			X108.Y739 'Net1Dn3'
			X108.Y747 'Net1Dn4'
			X108.Y755 'Net1Dn5'
			X108.Y763 'Net1DnUnit'

		}
		Timer1 'Disk1PowerOn'
		Timer2 'Disk2PowerOn'
		Timer3 'IPAddress'
		Timer4 'DSMBuildVersion'
		Timer5 'Lbuild'
		Timer6 'RamTotal'
		Timer7 'UpDay'
		Timer8 'CPULoad'
		Timer9 'CPUFan'
		Timer10 'CPUFreq'
		Timer11 'RamLoad'
		Timer12 'RamFree'
		Timer13 'RamBuffer'
		Timer14 'RamCache'
		Timer15 'SwapLoad'
		Timer16 'SwapTotal'
		Timer17 'SwapFree'
		Timer18 'SwapCache'
		Timer19 'Space1Total'
		Timer20 'Space1Free'
		Timer21 'Disk1Write'
		Timer22 'Disk1Read'
		Timer19 'Space2Total'
		Timer20 'Space2Free'
		Timer21 'Disk2Write'
		Timer22 'Disk2Read'
		Timer23 'Net1Up'
		Timer24 'Net1Dn'
}

Layout 'mylayout'

Variables {
    second 1000
    minute 60000
    hour 3600000
    day 86400000
    IP '10.0.1.201'
    BuildVersion '0000'
    LinuxBuild '00'
    RamT '0.00'
    UpD '0'
    Power1 '0'
    Power2 '0'
    CPU '0'
    CFan '0'
    CFreq '0'
    RLoad '0'
    RFree '0'
    RBuffer '0'
    RCache '0'
    SLoad '0'
    SwapT '0'
    SwapF '0'
    SwapC '0'
    Space1T '0'
    Space1F '0'
    Disk1W '0'
    Disk1R '0'    
    Space2T '0'
    Space2F '0'
    Disk2W '0'
    Disk2R '0'
    Net1U '0'
    Net1D '0'
    
    NetDevice 'eth0'	#网卡编号
    DiskName1 'sdc'	#硬盘1
    DiskName2 'sdd'	#硬盘2
    SpaceDir1  '/volume1'	#硬盘1在群晖中的挂载点
    SpaceDir2 '/volume2'	#硬盘2在群晖中的挂载点
    
    dImgDir '/usr/bin/skin/digit/'	#数字图片路径
    ImgDir '/usr/bin/skin/'	#图片根目录
    pImgDir '/usr/bin/skin/proc/'	#百分比图片路径
    tImgDir '/usr/bin/skin/temp/'		#温度图片路径
}
